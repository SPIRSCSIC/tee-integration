diff --git a/src/wrappers/python/pygroupsig/libgroupsig_build.py b/src/wrappers/python/pygroupsig/libgroupsig_build.py
index a9a634c..67598e2 100644
--- a/src/wrappers/python/pygroupsig/libgroupsig_build.py
+++ b/src/wrappers/python/pygroupsig/libgroupsig_build.py
@@ -180,29 +180,29 @@ ffibuilder.cdef(groupsigcdef)
 
 c_header_file = str(Path("../../../src/include/groupsig.h").absolute())
 c_include_path = str(Path("../../../src/include").absolute())
-c_lib_path = str(Path("../../../build/lib/libgroupsig-static.a").absolute())
-c_gl19_path = str(Path("../../../build/lib/libgl19.a").absolute())
-c_bbs04_path = str(Path("../../../build/lib/libbbs04.a").absolute())
-c_ps16_path = str(Path("../../../build/lib/libps16.a").absolute())
-c_klap20_path = str(Path("../../../build/lib/libklap20.a").absolute())
-c_kty04_path = str(Path("../../../build/lib/libkty04.a").absolute())
-c_cpy06_path = str(Path("../../../build/lib/libcpy06.a").absolute())
-c_dl21_path = str(Path("../../../build/lib/libdl21.a").absolute())
-c_dl21seq_path = str(Path("../../../build/lib/libdl21seq.a").absolute())
-c_logger_path = str(Path("../../../build/lib/liblogger.a").absolute())
-c_msg_path = str(Path("../../../build/lib/libmsg.a").absolute())
-c_base64_path = str(Path("../../../build/lib/libbase64.a").absolute())
-c_big_path = str(Path("../../../build/lib/libbig.a").absolute())
-c_hash_path = str(Path("../../../build/lib/libhash.a").absolute())
-c_pbcext_path = str(Path("../../../build/lib/libpbcext.a").absolute())
-c_crypto_path = str(Path("../../../build/lib/libgcrypto.a").absolute())
-c_math_path = str(Path("../../../build/lib/libmath.a").absolute())
-c_sys_path = str(Path("../../../build/lib/libsys.a").absolute())
-c_misc_path = str(Path("../../../build/lib/libmisc.a").absolute())
-c_mcl_path = str(Path("../../../build/external/lib/libmcl.a").absolute())
-c_mcl384_256_path = str(Path("../../../build/external/lib/libmclbn384_256.so").absolute())
-c_include_mcl_path = str(Path("../../../build/external/include/mcl").absolute())
-c_extlibs_path = str(Path("../../../build/external/lib").absolute())
+c_lib_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libgroupsig-static.a").absolute())
+c_gl19_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libgl19.a").absolute())
+c_bbs04_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libbbs04.a").absolute())
+c_ps16_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libps16.a").absolute())
+c_klap20_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libklap20.a").absolute())
+c_kty04_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libkty04.a").absolute())
+c_cpy06_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libcpy06.a").absolute())
+c_dl21_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libdl21.a").absolute())
+c_dl21seq_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libdl21seq.a").absolute())
+c_logger_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/liblogger.a").absolute())
+c_msg_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libmsg.a").absolute())
+c_base64_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libbase64.a").absolute())
+c_big_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libbig.a").absolute())
+c_hash_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libhash.a").absolute())
+c_pbcext_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libpbcext.a").absolute())
+c_crypto_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libgcrypto.a").absolute())
+c_math_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libmath.a").absolute())
+c_sys_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libsys.a").absolute())
+c_misc_path = str(Path("/spirs_tee_sdk/build/libgroupsig/lib/libmisc.a").absolute())
+c_mcl_path = str(Path("/spirs_tee_sdk/build/libgroupsig/external/lib/libmcl.a").absolute())
+c_mcl384_256_path = str(Path("/spirs_tee_sdk/build/libgroupsig/external/lib/libmclbn384_256.so").absolute())
+c_include_mcl_path = str(Path("/spirs_tee_sdk/build/libgroupsig/external/include/mcl").absolute())
+c_extlibs_path = str(Path("/spirs_tee_sdk/build/libgroupsig/external/lib").absolute())
 
 # Specify sources and library dependencies
 ffibuilder.set_source("_groupsig",
